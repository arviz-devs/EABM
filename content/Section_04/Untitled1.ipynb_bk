{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Plot Leave-One-Out (LOO) probability integral transformation (PIT) predictive checks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import arviz as az\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import stats\n",
    "import pymc3 as pm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#trace['logp']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import arviz as az\n",
    "\n",
    "idata = az.load_arviz_data(\"centered_eight\")\n",
    "\n",
    "az.plot_loo_pit(idata=idata, y=\"obs\", use_hdi=True)\n",
    "plt.savefig('lala_hdi.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fcef4873750>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "idata = az.load_arviz_data(\"regression1d\")\n",
    "#idata = az.load_arviz_data(\"non_centered_eight\")\n",
    "\n",
    "az.plot_loo_pit(idata=idata, y=\"y\", use_hdi=True,\n",
    "                #backend=\"bokeh\",\n",
    "                )\n",
    "#az.plot_loo_pit(idata=idata, y=\"y\");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "rnd = np.random.uniform(size=(10, 8))\n",
    "inter = (2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 100, 200, 300, 400, 500, 1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "up = []\n",
    "low = []\n",
    "for i in inter:\n",
    "    rnd = np.random.uniform(size=(100000, i))\n",
    "    lala = []\n",
    "    for r in rnd:\n",
    "        dens, _, _, = az.numeric_utils._fast_kde(r)\n",
    "        lala.append(dens)\n",
    "    hdi_ = az.hdi(np.array(lala))\n",
    "    up.append(hdi_[:,1])\n",
    "    low.append(hdi_[:,0])\n",
    "up = np.concatenate(up)\n",
    "low = np.concatenate(low)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "with pm.Model() as model:\n",
    "    a = pm.HalfCauchy('a', 1)\n",
    "    b = pm.HalfCauchy('b', 1)\n",
    "    bp = pm.Beta('bp', a, b, observed=up / (1+ up))\n",
    "    trace = pm.sample(1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "az.summary(trace)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "(1-0.94)/2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "n= 8\n",
    "dada = np.random.uniform(size=(1000, n))\n",
    "hdis = []\n",
    "for da in  dada:\n",
    "    az.plot_kde(da, plot_kwargs={'alpha':0.1})\n",
    "    hdis.append(az.hdi(az.numeric_utils._fast_kde(da)[0],hdi_prob=0.5)[1])\n",
    "#az.plot_kde(dada.mean(1))\n",
    "#dada = np.random.uniform(size=(100000, 100))\n",
    "#lolo = az.hdi(az.numeric_utils._fast_kde(dada.mean(1))[0])[1]\n",
    "#dala = np.exp(lolo  / (1 +lolo))\n",
    "dala = np.mean(hdis)\n",
    "plt.axhline(dala, color='k')\n",
    "plt.axhline(1/dala, color='k')\n",
    "\n",
    "dak = stats.beta((n/2), (n/2)).ppf((1-0.5)/2) \n",
    "dala = (dak / (1 - dak))\n",
    "plt.axhline(dala, color='C1')\n",
    "plt.axhline(1/dala, color='C1')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "az.summary({'Ñ': (0, 1)})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.mean(hdis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "az.plot_kde(hdis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "dak = stats.beta((n/2), (n/2)).ppf(0.94) \n",
    "(dak / (1 - dak)), 1 / (dak / (1 - dak))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "((1 - dak) / dak)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "daf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "data = [0.9371042009808908, 0.6431774002632772, 0.353378471691539,\n",
    "             0.6040140880083579, 0.3065612526419935, 0.3885448108263587,\n",
    "             0.9106864752702054, 0.6545904428442109]\n",
    "dens, xm, ym =az.numeric_utils._fast_kde(data, xmin=0, xmax=1)\n",
    "x = np.linspace(xm, ym, len(dens))\n",
    "plt.plot(x, dens)\n",
    "sns.kdeplot(data)\n",
    "az.plot_kde(data, rug=True)\n",
    "#plt.hist(data, bins=\"auto\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "The calibration of marginal predictions can be assessed using probability integral transformation (PIT) checks. LOO improves the check by avoiding the double use of data. See the section on marginal predictive checks in Gelman et al. (2013, p. 152--153) and section 5 of Gabry et al. (2019) for an example of using bayesplot for these checks. The LOO PIT values are asymptotically uniform (for continuous data) if the model is calibrated. The ppc_loo_pit_overlay() function creates a plot comparing the density of the LOO PITs (thick line) to the density estimates of many simulated data sets from the standard uniform distribution (thin lines). See Gabry et al. (2019) for an example of interpreting the shape of the miscalibration that can be observed in these plots. The ppc_loo_pit_qq() function provides an alternative visualization of the miscalibration with a quantile-quantile (Q-Q) plot comparing the LOO PITs to the standard uniform distribution. Comparing to the uniform is not good for extreme probabilities close to 0 and 1, so it can sometimes be useful to set the compare argument to \"normal\", which will produce a Q-Q plot comparing standardized PIT values to the standard normal distribution that can help see the (mis)calibration better for the extreme values. However, in most cases we have found that the overlaid density plot (ppc_loo_pit_overlay()) function will provided a clearer picture of calibration problems that the Q-Q plot."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
